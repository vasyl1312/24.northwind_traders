{
    "openapi": "3.0.3",
    "info": {
        "title": "Swagger - OpenAPI 3.0",
        "version": "1.0.11"
    },
    "tags": [
        { "name": "Products" },
        { "name": "Suppliers" },
        { "name": "Customers" },
        { "name": "Employees" },
        { "name": "Orders" }
    ],
    "paths": {
        "/products": {
            "get": {
                "tags": ["Products"],
                "summary": "Get list of all products",
                "responses": {
                    "200": {
                        "description": "A list of products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                }
            }
        },
        "/products/{productsId}": {
            "get": {
                "tags": ["Products"],
                "summary": "Get single product by id",
                "responses": {
                    "200": {
                        "description": "Full information about this single product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductId"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    },
                    "404": {
                        "description": "No records found in the database matching your query."
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                }
            }
        },
        "/suppliers": {
            "get": {
                "tags": ["Suppliers"],
                "summary": "Get list of all suppliers",
                "responses": {
                    "200": {
                        "description": "A list of suppliers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supplier"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                }
            }
        },
        "/suppliers/{suppliersId}": {
            "get": {
                "tags": ["Suppliers"],
                "summary": "Get single supplier by id",
                "responses": {
                    "200": {
                        "description": "Full information about this single supplier",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupplierId"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    },
                    "404": {
                        "description": "No records found in the database matching your query."
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                }
            }
        },
        "/customers": {
            "get": {
                "tags": ["Customers"],
                "summary": "Get list of all customers",
                "responses": {
                    "200": {
                        "description": "A list of customers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                }
            }
        },
        "/customers/{customersId}": {
            "get": {
                "tags": ["Customers"],
                "summary": "Get single customer by id",
                "responses": {
                    "200": {
                        "description": "Full information about this single customer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerId"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    },
                    "404": {
                        "description": "No records found in the database matching your query."
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                }
            }
        },
        "/employees": {
            "get": {
                "tags": ["Employees"],
                "summary": "Get list of all employees",
                "responses": {
                    "200": {
                        "description": "A list of employees",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Employee"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                }
            }
        },
        "/employees/{employeesId}": {
            "get": {
                "tags": ["Employees"],
                "summary": "Get single employee by id",
                "responses": {
                    "200": {
                        "description": "Full information about this single employee",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmployeeId"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    },
                    "404": {
                        "description": "No records found in the database matching your query."
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "tags": ["Orders"],
                "summary": "Get list of all orders",
                "responses": {
                    "200": {
                        "description": "A list of orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                }
            }
        },
        "/orders/{ordersId}": {
            "get": {
                "tags": ["Orders"],
                "summary": "Get single order by id",
                "responses": {
                    "200": {
                        "description": "Full information about this single order",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderId"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    },
                    "404": {
                        "description": "No records found in the database matching your query."
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Product": {
                "type": "object",
                "properties": {
                    "sqlLog": {
                        "$ref": "#/components/schemas/SqlLog"
                    },
                    "totalElementsFromDB": { "type": "integer", "example": 1 },
                    "maxPage": { "type": "integer", "example": 1 },
                    "products": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": { "type": "integer", "example": 1 },
                                "ProductID": { "type": "integer", "example": 1 },
                                "ProductName": { "type": "string", "example": "Chai" },
                                "QuantityPerUnit": { "type": "string", "example": "10 boxes x 20 bags" },
                                "UnitPrice": { "type": "string", "example": "18" },
                                "UnitsInStock": { "type": "integer", "example": 39 },
                                "UnitsOnOrder": { "type": "integer", "example": 0 }
                            }
                        }
                    }
                }
            },
            "ProductId": {
                "type": "object",
                "properties": {
                    "sqlLog": {
                        "$ref": "#/components/schemas/SqlLog"
                    },
                    "product": {
                        "type": "object",
                        "properties": {
                            "id": { "type": "integer", "example": 1 },
                            "ProductID": { "type": "integer", "example": 1 },
                            "ProductName": { "type": "string", "example": "Chai" },
                            "QuantityPerUnit": { "type": "string", "example": "10 boxes x 20 bags" },
                            "UnitPrice": { "type": "string", "example": "18" },
                            "UnitsInStock": { "type": "integer", "example": 39 },
                            "SupplierID": { "type": "integer", "example": 1 },
                            "ReorderLevel": { "type": "integer", "example": 10 },
                            "Discontinued": { "type": "integer", "example": 0 },
                            "UnitsOnOrder": { "type": "integer", "example": 0 },
                            "Supplier": { "type": "string", "example": "Exotic Liquids" }
                        }
                    }
                }
            },
            "Supplier": {
                "type": "object",
                "properties": {
                    "sqlLog": {
                        "$ref": "#/components/schemas/SqlLog"
                    },
                    "totalElementsFromDB": { "type": "integer", "example": 1 },
                    "maxPage": { "type": "integer", "example": 1 },
                    "suppliers": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": { "type": "integer", "example": 1 },
                                "SupplierID": { "type": "integer", "example": 1 },
                                "CompanyName": { "type": "string", "example": "Exotic Liquids" },
                                "ContactName": { "type": "string", "example": "Charlotte Cooper" },
                                "ContactTitle": { "type": "string", "example": "Purchasing Manager" },
                                "City": { "type": "string", "example": "London" },
                                "Country": { "type": "string", "example": "UK" }
                            }
                        }
                    }
                }
            },
            "SupplierID": {
                "type": "object",
                "properties": {
                    "sqlLog": {
                        "$ref": "#/components/schemas/SqlLog"
                    },
                    "supplier": {
                        "type": "object",
                        "properties": {
                            "id": { "type": "integer", "example": 2 },
                            "SupplierID": { "type": "integer", "example": 2 },
                            "CompanyName": { "type": "string", "example": "New Orleans Cajun Delights" },
                            "ContactName": { "type": "string", "example": "Shelley Burke" },
                            "ContactTitle": { "type": "string", "example": "Order Administrator" },
                            "Address": { "type": "string", "example": "P.O. Box 78934" },
                            "City": { "type": "string", "example": "New Orleans" },
                            "Region": { "type": "string", "example": "North America" },
                            "PostalCode": { "type": "string", "example": "70117" },
                            "Country": { "type": "string", "example": "USA" },
                            "Phone": { "type": "string", "example": "(100) 555-4822" },
                            "Fax": { "type": "string", "example": "4822" },
                            "HomePage": { "type": "string", "example": "#CAJUN.HTM#" }
                        }
                    }
                }
            },
            "Customer": {
                "type": "object",
                "properties": {
                    "sqlLog": {
                        "$ref": "#/components/schemas/SqlLog"
                    },
                    "totalElementsFromDB": { "type": "integer", "example": 1 },
                    "maxPage": { "type": "integer", "example": 1 },
                    "customers": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": { "type": "integer", "example": 1 },
                                "CustomerID": { "type": "string", "example": "ALFKI" },
                                "CompanyName": { "type": "string", "example": "Alfreds Futterkiste" },
                                "ContactName": { "type": "string", "example": "Maria Anders" },
                                "ContactTitle": { "type": "string", "example": "Sales Representative" },
                                "City": { "type": "string", "example": "Berlin" },
                                "Country": { "type": "string", "example": "Germany" }
                            }
                        }
                    }
                }
            },
            "CustomerId": {
                "type": "object",
                "properties": {
                    "sqlLog": {
                        "$ref": "#/components/schemas/SqlLog"
                    },
                    "customer": {
                        "type": "object",
                        "properties": {
                            "id": { "type": "integer", "example": 1 },
                            "CustomerID": { "type": "string", "example": "ALFKI" },
                            "CompanyName": { "type": "string", "example": "Alfreds Futterkiste" },
                            "ContactName": { "type": "string", "example": "Maria Anders" },
                            "ContactTitle": { "type": "string", "example": "Sales Representative" },
                            "Address": { "type": "string", "example": "Obere Str. 57" },
                            "City": { "type": "string", "example": "Berlin" },
                            "Region": { "type": "string", "example": "Western Europe" },
                            "PostalCode": { "type": "string", "example": "12209" },
                            "Country": { "type": "string", "example": "Germany" },
                            "Phone": { "type": "string", "example": "030-0074321" },
                            "Fax": { "type": "string", "example": "030-0076545" }
                        }
                    }
                }
            },
            "Employee": {
                "type": "object",
                "properties": {
                    "sqlLog": {
                        "$ref": "#/components/schemas/SqlLog"
                    },
                    "totalElementsFromDB": { "type": "integer", "example": 1 },
                    "maxPage": { "type": "integer", "example": 1 },
                    "employees": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": { "type": "integer", "example": 1 },
                                "EmployeeID": { "type": "integer", "example": 1 },
                                "Name": { "type": "string", "example": "Nancy Davolio" },
                                "Title": { "type": "string", "example": "Sales Representative" },
                                "City": { "type": "string", "example": "Seattle" },
                                "Country": { "type": "string", "example": "USA" },
                                "HomePhone": { "type": "string", "example": "(206) 555-9857" }
                            }
                        }
                    }
                }
            },
            "EmployeeId": {
                "type": "object",
                "properties": {
                    "sqlLog": {
                        "$ref": "#/components/schemas/SqlLog"
                    },
                    "employee": {
                        "type": "object",
                        "properties": {
                            "id": { "type": "integer", "example": 1 },
                            "EmployeeID": { "type": "integer", "example": 1 },
                            "Name": { "type": "string", "example": "Nancy Davolio" },
                            "Title": { "type": "string", "example": "Sales Representative" },
                            "TitleOfCourtesy": { "type": "string", "example": "Ms." },
                            "Address": { "type": "string", "example": "507 - 20th Ave. E.Apt. 2A" },
                            "City": { "type": "string", "example": "Seattle" },
                            "BirthDate": { "type": "string", "example": "1948-12-08" },
                            "PostalCode": { "type": "string", "example": "98122" },
                            "Country": { "type": "string", "example": "USA" },
                            "HireDate": { "type": "string", "example": "1992-05-01" },
                            "HomePhone": { "type": "string", "example": "(206) 555-9857" },
                            "Extension": { "type": "integer", "example": 5467 },
                            "Notes": {
                                "type": "string",
                                "example": "Education includes a BA in psychology from Colorado State University in 1970.  She also completed \"The Art of the Cold Call.\"  Nancy is a member of Toastmasters International."
                            },
                            "ReportsTo": {
                                "type": "object",
                                "properties": {
                                    "EmployeeID": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "Name": {
                                        "type": "string",
                                        "example": "Andrew Fuller"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Order": {
                "type": "object",
                "properties": {
                    "sqlLog": {
                        "$ref": "#/components/schemas/SqlLog"
                    },
                    "totalElementsFromDB": { "type": "integer", "example": 1 },
                    "maxPage": { "type": "integer", "example": 1 },
                    "orders": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": { "type": "integer", "example": 1 },
                                "OrderID": { "type": "string", "example": 10248 },
                                "TotalProductsPrice": { "type": "string", "example": "$440.00" },
                                "TotalQuantity": { "type": "string", "example": "27" },
                                "TotalProducts": { "type": "string", "example": "3" },
                                "ShippedDate": { "type": "string", "example": "7/16/1996" },
                                "ShipName": { "type": "string", "example": "Vins et alcools Chevalier" },
                                "ShipCountry": { "type": "string", "example": "France" },
                                "ShipCity": { "type": "string", "example": "Reims" }
                            }
                        }
                    }
                }
            },
            "OrderId": {
                "type": "object",
                "properties": {
                    "sqlLog": {
                        "$ref": "#/components/schemas/SqlLog"
                    },
                    "order": {
                        "type": "object",
                        "properties": {
                            "id": { "type": "integer", "example": 1 },
                            "ProductID": { "type": "integer", "example": 1 },
                            "ProductName": { "type": "string", "example": "Chai" },
                            "QuantityPerUnit": { "type": "string", "example": "10 boxes x 20 bags" },
                            "UnitPrice": { "type": "string", "example": "18" },
                            "UnitsInStock": { "type": "integer", "example": 39 },
                            "SupplierID": { "type": "integer", "example": 1 },
                            "ReorderLevel": { "type": "integer", "example": 10 },
                            "Discontinued": { "type": "integer", "example": 0 },
                            "UnitsOnOrder": { "type": "integer", "example": 0 },
                            "Supplier": { "type": "string", "example": "Exotic Liquids" }
                        }
                    }
                }
            },
            "SqlLog": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "querySqlLog": {
                            "type": "string",
                            "example": "SELECT \"id\", \"ProductID\", \"ProductName\", \"QuantityPerUnit\", \"UnitPrice\", \"UnitsInStock\", \"UnitsOnOrder\" FROM products;"
                        },
                        "startTime": { "type": "string", "example": "2023-06-22T13:18:57.665Z" },
                        "finishTime": { "type": "string", "example": "2023-06-22T13:18:57.710Z" },
                        "executionTimeToSecond": { "type": "integer", "example": 0.045 }
                    }
                }
            }
        }
    }
}
